//TODO 'HasEnchantment', 'CustomAlertSound', 'CustomAlertSoundOptional', 'DisableDropSound', 'EnableDropSound', 'DisableDropSoundIfAlertSound', 'EnableDropSoundIfAlertSound'

const defaultContent = JSON.stringify({
  rules: {
    'Blocks': ['Show', 'Hide', 'Minimal'],
    'Type Filters': [
      {
        property: 'BaseType',
        instance: 'Sel',
        defaultVal: { textValues: ['Thicket Bow'] },
        options: 'BaseTypes',
      },
      {
        property: 'Class',
        instance: 'Sel',
        defaultVal: { textValues: ['Currency'] },
        options: 'Classes',
      },
      {
        property: 'Rarity',
        instance: 'Sel',
        defaultVal: { operator: '>=', textValues: ['Rare'] },
        options: 'Rarity',
      },
    ],
    'ArmourFilters': [
      {
        property: 'BaseArmour',
        instance: 'Num',
        defaultVal: { operator: '>=', numValues: [100] },
        min: '0',
      },
      {
        property: 'BaseDefencePercentile',
        instance: 'Num',
        defaultVal: { operator: '>=', numValues: [5] },
        min: '1',
      },
      {
        property: 'BaseEnergyShield',
        instance: 'Num',
        defaultVal: { operator: '>=', numValues: [200] },
        min: '1',
      },
      {
        property: 'BaseEvasion',
        instance: 'Num',
        defaultVal: { operator: '>=', numValues: [153] },
        min: '1',
      },
      {
        property: 'BaseWard',
        instance: 'Num',
        defaultVal: { operator: '>=', numValues: [20] },
        min: '1',
      },
    ],
    'SocketFilters': [
      {
        property: 'LinkedSockets',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [4] },
        min: '2',
        max: '6',
      },
      {
        property: 'SocketGroup',
        instance: 'OprNumSoc',
        defaultVal: {
          operator: '>=',
          numValues: [5],
          sockets: {
            R: 1,
            G: 3,
            B: 0,
            A: 0,
            D: 0,
            W: 0,
          },
        },
        min: '2',
        max: '6',
      },
      {
        property: 'Sockets',
        instance: 'OprNumSoc',
        defaultVal: {
          operator: '>=',
          numValues: [5],
          sockets: {
            R: 1,
            G: 3,
            B: 0,
            A: 0,
            D: 0,
            W: 0,
          },
        },
        min: '2',
        max: '6',
      },
    ],
    'Miscellaneous': [
      {
        property: 'AlternateQuality',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'AnyEnchantment',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'ArchnemesisMod',
        instance: 'Mul',
        defaultVal: { textValues: ['Toxic'] },
        options: 'ArchnemesisMods',
      },
      {
        property: 'Corrupted',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'CorruptedMods',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [1] },
        min: '0',
        max: '3',
      },
      {
        property: 'ElderItem',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'EnchantmentPassiveNode',
        instance: 'Mul',
        defaultVal: { textValues: ['Damage over Time'] },
        options: 'EnchantmentPassiveNodes',
      },
      {
        property: 'EnchantmentPassiveNum',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [1] },
        min: '0',
        max: '6',
      },
      {
        property: 'FracturedItem',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'GemQualityType',
        instance: 'Sel',
        defaultVal: { textValues: ['Superior'] },
        options: 'GemQualityTypes',
      },
      {
        property: 'HasEaterOfWorldsImplicit',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [1] },
        min: '0',
        max: '6',
      },
      {
        property: 'HasExplicitMod',
        instance: 'OprNumMul',
        defaultVal: {
          operator: '>=',
          numValues: [2],
          textValues: ['of Haast', 'of Tzteosh', 'of Ephij'],
        },
        options: 'ExplicitMods',
        min: '1',
        max: '6',
      },
      {
        property: 'HasInfluence',
        instance: 'Sel',
        defaultVal: { textValues: ['None'] },
        options: 'Influences',
      },
      {
        property: 'HasSearingExarchImplicit',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [1] },
        min: '0',
        max: '6',
      },
      {
        property: 'Width',
        instance: 'Num',
        defaultVal: { operator: '=', numValues: [1] },
        min: '1',
        max: '15',
      },
      {
        property: 'Height',
        instance: 'Num',
        defaultVal: { operator: '=', numValues: [1] },
        min: '1',
        max: '6',
      },
      {
        property: 'Identified',
        instance: 'Sel',
        defaultVal: { textValues: ['True'] },
        options: 'Boolean',
      },
      {
        property: 'Mirrored',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'Quality' /*TODO*/,
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [0] },
        min: '0',
        max: '33',
      },
      {
        property: 'Replica',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'Scourged',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'ShaperItem',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'StackSize',
        instance: 'Num',
        defaultVal: { operator: '>=', numValues: [5] },
        min: '1',
        max: '100',
      },
      {
        property: 'SynthesisedItem',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
    ],
    'Requirements': [
      {
        property: 'AreaLevel',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [2] },
        min: '1',
        max: '100',
      },
      {
        property: 'DropLevel',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [2] },
        min: '1',
        max: '100',
      },
      {
        property: 'GemLevel',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [15] },
        min: '1',
        max: '22',
      },
      {
        property: 'ItemLevel',
        instance: 'Num',
        defaultVal: { operator: '>', numValues: [20] },
        min: '0',
        max: '100',
      },
    ],
    'Map Filters': [
      {
        property: 'BlightedMap',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'ElderMap',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'MapTier',
        instance: 'Num',
        defaultVal: { operator: '>=', numValues: [15] },
        min: '1',
        max: '16',
      },
      {
        property: 'ShapedMap',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
      {
        property: 'UberBlightedMap',
        instance: 'Sel',
        defaultVal: { textValues: ['False'] },
        options: 'Boolean',
      },
    ],
    'Actions': [
      {
        property: 'PlayAlertSound',
        instance: 'NumNum',
        defaultVal: { numValues: [1, 100] },
        min: '1',
        max: '16',
      },
      {
        property: 'PlayAlertSoundPositional',
        instance: 'NumNum',
        defaultVal: { numValues: [1, 100] },
        min: '1',
        max: '16',
      },
      {
        property: 'MinimapIcon',
        instance: 'NumSelSel',
        options: ['Colors', 'Shapes'],
        defaultVal: { numValues: [2], textValues: ['Cyan', 'Diamond'] },
        min: '0',
        max: '2',
      },
      {
        property: 'PlayEffect',
        instance: 'SelChx',
        defaultVal: { textValues: ['Red', 'Temp'] },
        options: 'Colors',
        value: 'Temp',
      },
      {
        property: 'SetBackgroundColor',
        instance: 'Col',
        defaultVal: { colorValues: [[255, 255, 255, 255]] },
        min: '0',
        max: '255',
      },
      {
        property: 'SetBorderColor',
        instance: 'Col',
        defaultVal: { colorValues: [[255, 255, 255, 255]] },
        min: '0',
        max: '255',
      },
      {
        property: 'SetFontSize',
        instance: 'Num',
        defaultVal: { numValues: [30] },
        min: '1',
        max: '45',
      },
      {
        property: 'SetTextColor',
        instance: 'Col',
        defaultVal: { colorValues: [[255, 255, 255, 255]] },
        min: '0',
        max: '255',
      },
    ],
  },
  Influences: [
    'Shaper',
    'Elder',
    'Crusader',
    'Hunter',
    'Redeemer',
    'Warlord',
    'None',
  ],
  EnchantmentPassiveNodes: ['Damage over Time'] /*TODO*/,
  Classes: [
    'AbyssJewel',
    'Active Skill Gem',
    'Amulet',
    'AtlasRegionUpgradeItem',
    'Belt',
    'Body Armour',
    'Boots',
    'Bow',
    'Claw',
    'Currency',
    'Dagger',
    'DelveSocketableCurrency',
    'DelveStackableSocketableCurrency',
    'DivinationCard',
    'ExpeditionLogbook',
    'FishingRod',
    'Gloves',
    'HarvestObject',
    'HarvestInfrastructure',
    'HarvestPlantBooster',
    'HarvestSeed',
    'HeistBlueprint',
    'HeistContract',
    'HeistEquipmentReward',
    'HeistEquipmentTool',
    'HeistEquipmentUtility',
    'HeistEquipmentWeapon',
    'HeistObjective',
    'Helmet',
    'HideoutDoodad',
    'HybridFlask',
    'Incubator',
    'IncursionItem',
    'Jewel',
    'LabyrinthItem',
    'LabyrinthMapItem',
    'LabyrinthTrinket',
    'Leaguestone',
    'LifeFlask',
    'ManaFlask',
    'Map',
    'MapFragment',
    'MetamorphosisDNA',
    'Microtransaction',
    'MiscMapItem',
    'One Hand Axe',
    'One Hand Mace',
    'One Hand Sword',
    'PantheonSoul',
    'QuestItem',
    'Quiver',
    'Ring',
    'Rune Dagger',
    'Sceptre',
    'Shield',
    'StackableCurrency',
    'Staff',
    'Support Skill Gem',
    'Thrusting One Hand Sword',
    'Trinket',
    'Two Hand Axe',
    'Two Hand Mace',
    'Two Hand Sword',
    'Unarmed',
    'UniqueFragment',
    'UniqueShard',
    'UniqueShardBase',
    'UtilityFlask',
    'UtilityFlaskCritical',
    'Wand',
    'Warstaff',
  ] /*TODO*/,
  BaseTypes: ['Thicket Bow'] /*TODO*/,
  Shapes: [
    'Circle',
    'Diamond',
    'Hexagon',
    'Square',
    'Star',
    'Triangle',
    'Cross',
    'Moon',
    'Raindrop',
    'Kite',
    'Pentagon',
    'UpsideDownHouse',
  ],
  Colors: [
    'Red',
    'Green',
    'Blue',
    'Brown',
    'White',
    'Yellow',
    'Cyan',
    'Grey',
    'Orange',
    'Pink',
    'Purple',
  ],
  Boolean: ['True', 'False'],
  Operators: ['=', '!', '<=', '>=', '<', '>', '=='],
  GemQualityTypes: ['Superior', 'Divergent', 'Anomalous', 'Phantasmal'],
  ArchnemesisMods: [
    'Steel-infused',
    'Flameweaver',
    'Stormweaver',
    'Frostweaver',
    'Gargantuan',
    'Hasted',
    'Chaosweaver',
    'Arcane Buffer',
    'Echoist',
    'Sentinel',
    'Splinterer',
    'Deadeye',
    'Electrocuting',
    'Vampiric',
    'Overcharged',
    'Flame Strider',
    'Frost Strider',
    'Storm Strider',
    'Ice Prison',
    'Entangler',
    'Toxic',
    'Treant Horde',
    'Bloodletter',
    'Bonebreaker',
    'Juggernaut',
    'Soul Conduit',
    'Consecrator',
    'Frenzied',
    'Assassin',
    'Necromancer',
    'Hexer',
    'Mirror Image',
    'Spirit Walkers',
    'Union of Souls',
    'Storm Herald',
    'Prismatic',
    'Bombardier',
    'Malediction',
    'Rejuvenating',
    'Executioner',
    'Temporal Bubble',
    'Soul Eater',
    'Corpse Detonator',
    'Magma Barrier',
    'Incendiary',
    'Crystal Skinned',
    'Mana Siphoner',
    'Heralding Minions',
    'Benevolent Guardian',
    'Final Gasp',
    'Berserker',
    'Drought Bringer',
    'Corruptor',
    'Empowered Elements',
    'Effigy',
    'Empowering Minions',
    'Permafrost',
    'Trickster',
    'Opulent',
    'Lunaris-touched',
    'Solaris-touched',
    'Arakaali-touched',
    'Brine King-touched',
    'Tukohama-touched',
    'Abberath-touched',
    'Shakari-touched',
    'Innocence-touched',
    'Kitava-touched',
  ],
  ExplicitMods: ['of Haast', 'of Tzteosh', 'of Ephij'],
  Rarity: ['Normal', 'Magic', 'Rare', 'Unique'],
});

export default defaultContent;
